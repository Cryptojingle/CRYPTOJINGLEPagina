import { ChannelConfig } from '@metamask/sdk-communication-layer';
import { ProviderService } from './ProviderService';
interface WalletConnectInstance {
    connected: boolean;
    uri: string;
    createSession: () => Promise<void>;
    on: (event: string, cb: () => void) => void;
}
interface WalletConnectProps {
    wcConnector: WalletConnectInstance;
    forceRestart?: boolean;
}
export declare class WalletConnect implements ProviderService {
    wcConnector: WalletConnectInstance;
    universalLink: string;
    deepLink: string;
    sentFirstConnect: boolean;
    forceRestart: boolean;
    constructor({ wcConnector, forceRestart }: WalletConnectProps);
    getChannelConfig(): ChannelConfig | undefined;
    getConnector(): WalletConnectInstance;
    getUniversalLink(): string;
    startConnection(): Promise<boolean>;
    isConnected(): boolean;
    isAuthorized(): boolean;
    disconnect(): void;
}
export {};
//# sourceMappingURL=WalletConnect.d.ts.map