import { MetaMaskState } from "./metamask-context";
type MetaMaskUnavailable = {
    type: "metaMaskUnavailable";
};
type MetaMaskNotConnected = {
    type: "metaMaskNotConnected";
    payload: {
        chainId: string;
    };
};
type MetaMaskConnected = {
    type: "metaMaskConnected";
    payload: {
        accounts: string[];
        chainId: string;
    };
};
type MetaMaskConnecting = {
    type: "metaMaskConnecting";
};
type PermissionRejected = {
    type: "metaMaskPermissionRejected";
};
type AccountsChanged = {
    type: "metaMaskAccountsChanged";
    payload: string[];
};
type ChainChanged = {
    type: "metaMaskChainChanged";
    payload: string;
};
export type Action = MetaMaskUnavailable | MetaMaskNotConnected | MetaMaskConnected | MetaMaskConnecting | PermissionRejected | AccountsChanged | ChainChanged;
export declare function reducer(state: MetaMaskState, action: Action): MetaMaskState;
export {};
